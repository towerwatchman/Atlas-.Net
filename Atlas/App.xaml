<Application x:Class="Atlas.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Atlas"
             StartupUri="Launcher.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <!-- #region ResourceDictionary.MergedDictionaries [Loaded at Runtime]-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Assets/Images/icons.xaml"/>
                <ResourceDictionary Source="/UI/Layouts/banner.xaml"/>
                <!-- Default theme -->
                <ResourceDictionary x:Name="rdTheme" Source="/Themes/dark.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--#endregion-->

            <!-- #region x:Type Radio Button -->
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="content"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Highlight}"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region x:Type Button -->
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource Secondary}"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                <Setter Property="Width" Value="70"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource Border}" BorderThickness="1" CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Selected}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value=".5"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->

            <!-- #region Min Max and Exit Buttons -->
            <Style x:Key="MinMaxStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Tertiary}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="ExitStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkRed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->

            <!--#region x:Type Textbox -->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource Tertiary}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Border}"/>
                <Setter Property="Margin" Value="8,0,8,0"/>
                <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                <Setter Property="Height" Value="20" />
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Style.Resources>
            </Style>
            <!--#endregion-->

            <!-- Label -->
            <Style TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
            </Style>

            <!-- Checkbox -->
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Background" Value="{DynamicResource Text}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                                    <Grid>
                                        <Grid Background="{TemplateBinding Foreground}" Margin="1" Visibility="Collapsed" Name="nullBlock"/>
                                        <Path Stretch="Uniform" Width="15" Height="10" Fill="{TemplateBinding Foreground}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                                    </Grid>
                                </Border>
                                <TextBlock Margin="5,0,0,0"  VerticalAlignment="Center" Foreground="White" Text="{TemplateBinding Content}"></TextBlock>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="nullBlock" Property="Visibility" Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <!-- ListView -->
            <Style x:Key="DefaultListViewStyle" TargetType="ListView">
                <Setter Property="Background" Value="{DynamicResource Tertiary}"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <!-- Bitmap Effects -->
            <DropShadowBitmapEffect
                x:Key="BottomShadowEffect"
                ShadowDepth="3"
                Softness=".2"
                Direction="-59"
                Color="#0c0d12"/>
            <DropShadowBitmapEffect
                x:Key="RightShadowEffect"
                ShadowDepth="3"
                Softness=".2"
                Direction="-59"
                Color="#0c0d12"/>

            <!--#region Scroll Bar -->
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="{StaticResource Primary}"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <!--<Setter Property="Margin" Value="3"/>-->
                <Setter Property="Background" Value="{StaticResource Tertiary}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="rectangle" Background="{StaticResource Tertiary}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="10" CornerRadius="4"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="rectangle" Value="{StaticResource Tertiary}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter Property="Background" TargetName="rectangle" Value="{StaticResource Tertiary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <!--<Setter Property="Margin" Value="3"/>-->
                <Setter Property="Background" Value="{StaticResource Tertiary}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="rectangle" Background="{StaticResource Tertiary}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True" Height="10" CornerRadius="4"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="rectangle" Value="{StaticResource Tertiary}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter Property="Background" TargetName="rectangle" Value="{StaticResource Tertiary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- This has to be set after RepeatButtonTransparent-->
            <Style TargetType="{x:Type ScrollBar}">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Background" Value="{StaticResource Primary}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
                        <Setter Property="Width" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            <RowDefinition Height="0.00001*"/>
                                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        </Grid.RowDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="5"/>
                                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Background" Value="{StaticResource Primary}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
                        <Setter Property="Height" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="5"/>
                                        <Track x:Name="PART_Track" IsDirectionReversed="False" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--#endregion-->

            <!-- Progress Bar -->
            <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
                <Setter Property="Background" Value="{StaticResource Secondary}"/>
                <Setter Property="Foreground" Value="{StaticResource Accent}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Border CornerRadius="6" BorderThickness="1" BorderBrush="Transparent" Background="{StaticResource Secondary}">
                                <Grid MinHeight="14" MinWidth="200" Background="Transparent">
                                    <Border x:Name="PART_Track" CornerRadius="6" BorderThickness="1" BorderBrush="Transparent"/>
                                    <Border x:Name="PART_Indicator"
                                  CornerRadius="6"
                                  BorderThickness="1"
                                  HorizontalAlignment="Left"
                                  Background="{TemplateBinding Foreground}"
                                  Margin="0,0,0,0">
                                    </Border>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ComboBox -->
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Height" Value="25"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="5*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="Border" Grid.ColumnSpan="2" Background="{DynamicResource Tertiary}" BorderBrush="{DynamicResource Border}" BorderThickness="1" />
                                                <Border Grid.Column="0" Margin="1"  Background="{DynamicResource Tertiary}"  BorderBrush="{DynamicResource Border}" BorderThickness="0,0,1,0" />
                                                <Path x:Name="Arrow" Grid.Column="1"  Fill="{DynamicResource Highlight}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                    <Setter Property="Background" Value="{DynamicResource Selected}"/>
                                                </Trigger>
                                                <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                    <Setter Property="Background" Value="{DynamicResource Selected}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                                <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="3,0,0,0"/>
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                    <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="{DynamicResource Tertiary}" />
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                </Style.Triggers>
            </Style>

            <!-- ComboBoxItem -->
            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter Margin="{TemplateBinding Margin}"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" 
                            Value="{DynamicResource Selected}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!-- DataGrid -->

            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="{DynamicResource Primary}"/>
                <Setter Property="BorderThickness" Value="0,1,0,0"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Border}"/>
            </Style>

            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="{DynamicResource Tertiary}"/>
                <Setter Property="Foreground" Value="{DynamicResource Text}"/>
            </Style>

            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="{DynamicResource Tertiary}"/>
            </Style>

            <Style TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="Background" Value="{DynamicResource Primary}"/>
            </Style>

            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource Primary}" Background="{DynamicResource Primary}">
                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource Text}" />
                <Setter Property="Background" Value="{DynamicResource Primary}"/>
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="12" />
            </Style>

        </ResourceDictionary>

    </Application.Resources>
</Application>
